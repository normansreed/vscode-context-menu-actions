{
  "name": "vscode-context-menu-actions",
  "displayName": "File actions in context menu",
  "description": "VSCode extension to apply actions to files from the context menu.",
  "version": "0.2.0",
  "publisher": "normansreed",
  "icon": "assets/icon.png",
  "author": {
    "name": "Norman Reed",
    "email": "norman.s.reed@gmail.com"
  },
  "license": "MIT",
  "keywords": [
    "format multiple files",
    "organize imports",
    "organize imports multiple files",
    "run actions",
    "context menu"
  ],
  "repository": {
    "type": "git",
    "url": "https://github.com/normansreed/vscode-context-menu-actions.git"
  },
  "homepage": "https://github.com/normansreed/vscode-context-menu-actions/blob/master/README.md",
  "bugs": {
    "url": "https://github.com/normansreed/vscode-context-menu-actions/issues",
    "email": "norman.s.reed@gmail.com"
  },
  "engines": {
    "vscode": "^1.45.0"
  },
  "categories": [
    "Other",
    "Formatters"
  ],
  "activationEvents": [
    "onCommand:extension.runActions",
    "onCommand:extension.chooseAction"
  ],
  "main": "./out/extension",
  "contributes": {
    "configuration": [
      {
        "title": "Context Menu Actions",
        "properties": {
          "contextMenuActions.actions": {
            "type": "array",
            "items": {
              "type": "string",
              "examples": [
                "editor.action.organizeImports",
                "editor.action.formatDocument",
                "editor.action.fixAll"
              ],
              "additionalItems": true
            },
            "uniqueItems": true,
            "minItems": 1,
            "default": [
              "editor.action.organizeImports",
              "editor.action.formatDocument",
              "editor.action.fixAll"
            ],
            "description": "Actions to perform on each file. (WARNING: While contextMenuActions technically supports any editor/workspace action in VSCode, it is only tested for organize imports and formatting the document. Use other values at your own risk!)",
            "scope": "window"
          },
          "contextMenuActions.save": {
            "type": "boolean",
            "default": true,
            "description": "Save file after performing actions.",
            "scope": "window"
          },
          "contextMenuActions.close": {
            "type": "boolean",
            "default": false,
            "description": "Close file after saving. This does nothing unless you have enabled saving after performing actions.",
            "scope": "window"
          }
        }
      }
    ],
    "commands": [
      {
        "command": "extension.runActions",
        "title": "Run Actions"
      },
      {
        "command": "extension.chooseAction",
        "title": "Run Action..."
      }
    ],
    "menus": {
      "explorer/context": [
        {
          "command": "extension.runActions",
          "group": "7_modification"
        },
        {
          "command": "extension.chooseAction",
          "group": "7_modification"
        }
      ],
      "scm/resourceState/context": [
        {
          "command": "extension.runActions"
        },
        {
          "command": "extension.chooseAction"
        }
      ]
    }
  },
  "scripts": {
    "vscode:prepublish": "yarn run compile",
    "compile": "tsc -p ./",
    "lint": "eslint src --ext ts",
    "watch": "tsc -watch -p ./",
    "pretest": "yarn run compile && yarn run lint",
    "test": "node ./out/test/index.js",
    "prepack": "vsce package --yarn -o ./out/"
  },
  "devDependencies": {
    "@types/glob": "^7.1.1",
    "@types/mocha": "^7.0.2",
    "@types/node": "^13.11.0",
    "@types/vscode": "^1.45.0",
    "@typescript-eslint/eslint-plugin": "^2.30.0",
    "@typescript-eslint/parser": "^2.30.0",
    "eslint": "^6.8.0",
    "glob": "^7.1.6",
    "mocha": "^7.1.2",
    "typescript": "^3.8.3",
    "vscode-test": "^1.3.0"
  },
  "dependencies": {
    "@types/lodash": "^4.14.154",
    "lodash": "^4.17.15",
    "rxjs": "^6.5.5"
  }
}
